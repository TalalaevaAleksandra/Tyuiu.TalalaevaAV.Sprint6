<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxCondition_TAV.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        VprVtlEIyiuiFX7k1HTznGnL4f/Z
</value>
  </data>
</root>